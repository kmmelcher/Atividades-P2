Loja
composes Item <Interface>
---
- id: int
- itens: HashMap<Integer, Item>
---
+ Loja()
+ cadastraJogoDeCarta(nome:String, qntCartas: int, custoPorCarta: int): int
+ cadastraJogoDeTabuleiro(nome: String, qntPecas: int, pesoPorPeca: int, qntItensExtras: int): int
+ cadastraItemPersonalizado(descricao: String, peso: int, custo: int): int
+ alteraCustoItemPersonalizado(id: int, novoPreco: int): void
+ alteraPesoItemPersonalizado(id: int, novoPeso: int): void
+ alteraQntItem(id: int, novaQnt: int): void
+ exibeItem(id: int): void
+ getItens(idsDosItens: int[]): HashMap<Integer, Item>
---

Financeiro
composes Compra
association Loja
---
- loja: Loja
- id: int
- compras: LinkedHashMap<Integer, Compra>
- tarifa: double
---
+ Financeiro(loja: Loja) 
+ cadastrarCompra(itens: HashMap, valorPago: int): int
+ listaCompras(): int [] 
+ exibirCompra(idDaCompra: int): String 
+ setTarifa(tarifa: double): void
+ isPresenteavel(idsDosItens: int[]): boolean 
+ registraEmbalagem(idDaCompra: int): void 
+ contarItensEmbalados(): int 
---

Compra
---
- itens: ArrayList<Item>
- tarifa: double
- valorPago: int
- isEmbalada: boolean
---
+ Compra(idsDeItens: int[], valorPago: int, tarifa : double)
- calculaCustoTotal(): int
- calculaLucro(): int
- calculaValorTributado(): double
- isCompraPresenteavel(): boolean
+ embalaCompra(): void
+ contaItensEmbalados(): int
+ toString(): String
---


Item <Interface>
---
---
+ alteraQnt(novaQnt: int): void
+ calculaPesoUnidade(): int
+ calculaCustoUnidade(): int
+ isPresenteavel(): boolean
---

JogoDeCarta
implements Item <Interface>
---
- nome: String
- qntCartas: int
- custoPorPeca: int
- unidades: int
---
+ JogoDeCarta(nome:String, qntCartas: int, custoPorCarta: int)
+ alteraQnt(novaQnt: int): void
+ calculaPesoUnidade(): int
+ calculaCustoUnidade(): int
+ isPresenteavel(): boolean
+ toString(): String
---

JogoDeTabuleiro
implements Item <Interface>
---
- nome: String
- qntPecas: int
- pesoPorPeca: int
- qntItensExtras: int
- unidades: int
---
+ JogoDeTabuleiro(nome: String, qntPecas: int, pesoPorPeca: int, qntItensExtras: int)
+ alteraQntDeUnidades(novaQnt: int): void
+ calculaPesoUnidade(): int
+ calculaCustoUnidade(): int
+ isPresenteavel(): boolean
+ toString(): String
---

ItemPersonalizado
implements Item <Interface>
---
- descricao: String
- peso: int
- custo: int
- unidades: int
---
+ ItemPersonalizado(descricao: String, peso: int, custo: int)
+ alteraQnt(novaQnt: int): void
+ setCusto(novoCusto : int): void 
+ setPeso(novoPeso : int): void 
+ calculaPesoUnidade(): int
+ calculaCustoUnidade(): int
+ isPresenteavel(): boolean
+ toString(): String
---


